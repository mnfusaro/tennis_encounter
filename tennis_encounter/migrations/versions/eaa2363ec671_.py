from sqlalchemy.dialects import postgresql
"""empty message

Revision ID: eaa2363ec671
Revises: 
Create Date: 2020-03-25 00:30:24.577725

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

from extensions import db
from models.users import GameLevel

# revision identifiers, used by Alembic.
revision = 'eaa2363ec671'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cities',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('states',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('game_level', sqlalchemy_utils.types.choice.ChoiceType(GameLevel, impl=db.Integer()), nullable=True),
    sa.Column('password', sa.LargeBinary(length=60), nullable=False),
    sa.Column('full_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('age', sa.SmallInteger(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('locations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('city_id', sa.INTEGER(), nullable=True),
    sa.Column('state_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_location_associations',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_location_associations')
    op.drop_table('locations')
    op.drop_table('users')
    op.drop_table('states')
    op.drop_table('cities')
    # ### end Alembic commands ###
